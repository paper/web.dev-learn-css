(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{364:function(a,t,r){"use strict";r.r(t);var s=r(44),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"学习-css"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习-css"}},[a._v("#")]),a._v(" 学习 CSS")]),a._v(" "),r("p",[a._v("这是一个经常更新的 CSS 课程和参考，可帮助你提高 web 样式专业技能。")]),a._v(" "),r("h2",{attrs:{id:"欢迎来学习-css"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#欢迎来学习-css"}},[a._v("#")]),a._v(" 欢迎来学习 CSS！")]),a._v(" "),r("p",[a._v('本课程将会把 CSS 的基本原理分解为可消化的并易于理解的小块。在接下来的几个模块中，你将会学习 CSS 内核是如何工作的，并如何在项目中有效地使用它们。在 "Learn CSS" logo 下面的菜单可以定位到各个模块。')]),a._v(" "),r("p",[a._v("你将会学习 CSS 基本知识，比如盒子模型、层叠、特殊性、flexbox、grid 和 z-index等等。当然，除了这些基本知识，你还会学习到功能、颜色类型、渐变、逻辑属性和继承的知识。让你成为全面的前端开发人员，并有能力构建任何用户界面。")]),a._v(" "),r("p",[a._v("每个模块都包含交互 demo 和自测来巩固你的知识。除了通过阅读和 demo 来学习之外，每个主题都有相应的播客片段，这是学习和持续扩展知识的另一种方式。")]),a._v(" "),r("p",[a._v("本课程是为初学者和高级 CSS 开发人员创建的。你可以重头到尾学习该课程，以从上到下全面了解 CSS。或者你可以当做一个参考手册一样进行查阅特点主题。如果你是完全新手，建议去查看 MDN 的 HTML 入门文档，来学习如何编写标签和引入你的样式表。")]),a._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[a._v("译者注")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://developer.mozilla.org/zh-CN/docs/Web/HTML"),r("OutboundLink")],1)]),a._v(" "),r("li",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://developer.mozilla.org/zh-CN/docs/Web/CSS"),r("OutboundLink")],1)])])]),a._v(" "),r("p",[a._v("在这里你将会学到：")]),a._v(" "),r("h3",{attrs:{id:"盒子模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[a._v("#")]),a._v(" "),r("RouterLink",{attrs:{to:"/001-Box-Model.html"}},[a._v("盒子模型")])],1),a._v(" "),r("p",[a._v("CSS 显示的每一个内容都是一个盒子。理解盒子模型是如何工作，是 CSS 的核心基础。")]),a._v(" "),r("h3",{attrs:{id:"选择器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#选择器"}},[a._v("#")]),a._v(" 选择器")]),a._v(" "),r("p",[a._v("想要把 CSS 应用在某个元素上，那首选你得选中这个元素。CSS 为你提供了很多种方法，你可以在这个模块中去探索。")]),a._v(" "),r("h3",{attrs:{id:"层叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#层叠"}},[a._v("#")]),a._v(" 层叠")]),a._v(" "),r("p",[a._v("有时会有两个或者多个样式规则应用在同一个元素上。在这个模块，你可以了解浏览器是如何选择的，它的规则是什么？")]),a._v(" "),r("h3",{attrs:{id:"优先级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[a._v("#")]),a._v(" 优先级")]),a._v(" "),r("p",[a._v("在这个模块我们更深入研究优先级，这是层叠的关键部分。")]),a._v(" "),r("h3",{attrs:{id:"继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[a._v("#")]),a._v(" 继承")]),a._v(" "),r("p",[a._v("有一些 CSS 属性，如果你不给它写上值，它会继承一些值。在本模块中，我们去了解它的工作原理和如何使用它。")]),a._v(" "),r("h3",{attrs:{id:"颜色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#颜色"}},[a._v("#")]),a._v(" 颜色")]),a._v(" "),r("p",[a._v("CSS 有好几种方式写颜色。在这个模块，我们看一看最常用的颜色值有哪些。")]),a._v(" "),r("h3",{attrs:{id:"尺寸单位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#尺寸单位"}},[a._v("#")]),a._v(" 尺寸单位")]),a._v(" "),r("p",[a._v("在这个模块中，我们将学习如何定义元素大小，并让它运行在弹性的web界面中。")]),a._v(" "),r("h3",{attrs:{id:"布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[a._v("#")]),a._v(" 布局")]),a._v(" "),r("p",[a._v("大致介绍几种构建组件或页面布局的方法。")]),a._v(" "),r("h3",{attrs:{id:"flexbox"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flexbox"}},[a._v("#")]),a._v(" Flexbox")]),a._v(" "),r("p",[a._v("当多个元素组在一个维度（比如一行或一列）需要各种排列时，非常适合 Flexbox 来进行布局。我们将在此模块进行学习。")]),a._v(" "),r("h3",{attrs:{id:"网格"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网格"}},[a._v("#")]),a._v(" 网格")]),a._v(" "),r("p",[a._v("CSS 网格提供二维布局的能力，可控制行和列的同时布局。在这模块中我将学习它的一切。")]),a._v(" "),r("h3",{attrs:{id:"逻辑属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#逻辑属性"}},[a._v("#")]),a._v(" 逻辑属性")]),a._v(" "),r("p",[a._v("逻辑上，流相关属性与（？），而不是屏幕上的物理形状。学习如何使用这种比较新的CSS方法。")]),a._v(" "),r("h3",{attrs:{id:"间距"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#间距"}},[a._v("#")]),a._v(" 间距")]),a._v(" "),r("p",[a._v("了解如何使用元素间距技巧，当你准备构建组件或你正在使用的布局方法。")]),a._v(" "),r("h3",{attrs:{id:"伪元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[a._v("#")]),a._v(" 伪元素")]),a._v(" "),r("p",[a._v("伪元素就像新增了一个额外的元素且不需要新增 HTML 节点。它们具有多种角色，你可以在本模块了解它们。")]),a._v(" "),r("h3",{attrs:{id:"伪类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[a._v("#")]),a._v(" 伪类")]),a._v(" "),r("p",[a._v("伪类可以让你根据状态的改变来使用不同的CSS。这意味着你可以设计一些响应用户操作的表现形式，例如输入无效的电子邮件地址等。")]),a._v(" "),r("h3",{attrs:{id:"边框"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边框"}},[a._v("#")]),a._v(" 边框")]),a._v(" "),r("p",[a._v("边框为你盒子模型提供一个框框。在这本模块中，了解使用 CSS 来改变边框的大小、样式和颜色。")]),a._v(" "),r("h3",{attrs:{id:"阴影"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#阴影"}},[a._v("#")]),a._v(" 阴影")]),a._v(" "),r("p",[a._v("有很多种方法，使用 CSS 给文本和元素添加阴影。在这个模块中我们将学习它们有哪些细节，和它们为什么这么设计。")]),a._v(" "),r("h3",{attrs:{id:"焦点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#焦点"}},[a._v("#")]),a._v(" 焦点")]),a._v(" "),r("p",[a._v("理解焦点在你应用程序中的重要性。你将了解如何管理焦点，以及如何确保页面路径正常，不管用户是使用的鼠标，还是使用键盘导航。（无障碍）")]),a._v(" "),r("h3",{attrs:{id:"z-index-和-层叠上下文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#z-index-和-层叠上下文"}},[a._v("#")]),a._v(" Z-index 和 层叠上下文")]),a._v(" "),r("p",[a._v("在本模块中，将了解如何使用 z-index 和层叠上下文来控制元素之间的上下位置顺序。")]),a._v(" "),r("h3",{attrs:{id:"函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),r("p",[a._v("CSS 有一系列内置函数。在本模块中，你将了解一些关键函数并如何使用它们。")]),a._v(" "),r("h3",{attrs:{id:"渐变"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#渐变"}},[a._v("#")]),a._v(" 渐变")]),a._v(" "),r("p",[a._v("在本模块中，你将了解如何使用 CSS 中的各种类型渐变。渐变可用于创建大量的实用效果，而不需要使用图片。")]),a._v(" "),r("h3",{attrs:{id:"动画"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[a._v("#")]),a._v(" 动画")]),a._v(" "),r("p",[a._v("动画是突出交互元素，并为你的设计增添趣味的好办法。在本模块中，学习如何使用 CSS 添加和控制动画。")]),a._v(" "),r("h3",{attrs:{id:"滤镜"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#滤镜"}},[a._v("#")]),a._v(" 滤镜")]),a._v(" "),r("p",[a._v("CSS 滤镜可以实现那些你认为只能出现在图像处理软件（比如PS）中的效果。在本模块中，你将会发现它是多么有用！")]),a._v(" "),r("h3",{attrs:{id:"混合模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#混合模式"}},[a._v("#")]),a._v(" 混合模式")]),a._v(" "),r("p",[a._v("通过混合两个或多个图层来创建合成效果。在本模块中，学习怎么使用白色背景切割一个图片")]),a._v(" "),r("h3",{attrs:{id:"结论和下一步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结论和下一步"}},[a._v("#")]),a._v(" 结论和下一步")]),a._v(" "),r("p",[a._v("这里有帮助你进行下一步的更多资源")])])}),[],!1,null,null,null);t.default=v.exports}}]);